/**
 * @fileoverview gRPC-Web generated client stub for space.data
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.29.3
// source: spacedata.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as spacedata_pb from './spacedata_pb'; // proto import: "spacedata.proto"


export class SpaceDataStreamerClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorGetSpaceData = new grpcWeb.MethodDescriptor(
    '/space.data.SpaceDataStreamer/GetSpaceData',
    grpcWeb.MethodType.SERVER_STREAMING,
    spacedata_pb.SpaceDataRequest,
    spacedata_pb.SpaceDataResponse,
    (request: spacedata_pb.SpaceDataRequest) => {
      return request.serializeBinary();
    },
    spacedata_pb.SpaceDataResponse.deserializeBinary
  );

  getSpaceData(
    request: spacedata_pb.SpaceDataRequest,
    metadata?: grpcWeb.Metadata): grpcWeb.ClientReadableStream<spacedata_pb.SpaceDataResponse> {
    return this.client_.serverStreaming(
      this.hostname_ +
        '/space.data.SpaceDataStreamer/GetSpaceData',
      request,
      metadata || {},
      this.methodDescriptorGetSpaceData);
  }

}

